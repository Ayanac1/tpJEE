package dao.daoMySql;
import dao.IDao;
import model.utilisateur;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public abstract class utilisateurDao implements IDao<utilisateur, Long> {

        private Connection connection;

        public void utilisateurDao(Connection connection) {
            this.connection = connection;

        }

        private static final String SQL_SELECT_BY_ID = "SELECT * FROM utilisateur WHERE id = ?";

        public utilisateur findById(long id) {
            utilisateur utilisateur = null;
            ResultSet resultSet = null;
            PreparedStatement ps = null;
            try {
                ps = utilitaire.initPs(connection, SQL_SELECT_BY_ID, false, utilisateur.getNom(), utilisateur.getPrenom(), utilisateur.getEmail(), utilisateur.getCin(), utilisateur.getTel(), utilisateur.getSexe());
                resultSet = ps.executeQuery();
                if (resultSet.next()) {
                    utilisateur = map(resultSet);
                }
            } catch (SQLException e) {
                e.printStackTrace();
            } finally {
                utilitaire.CloseDaoObject(resultSet, ps);
            }
            return utilisateur;
        }


        private static final String SQL_SELECT_ALL = "SELECT * FROM utilisateur";

        public List<utilisateur> findAll() throws DAOException {
            PreparedStatement ps = null;
            ResultSet resultSet = null;
            List<utilisateur> utilisateurs = new ArrayList<>();

            utilisateur utilisateur = null;
            try {
                ps = utilitaire.initPs(connection, SQL_SELECT_ALL, false, utilisateur.getNom(), utilisateur.getPrenom(), utilisateur.getEmail(), utilisateur.getCin(), utilisateur.getTel(), utilisateur.getSexe());
                resultSet = ps.executeQuery();
                System.out.println("[SQL]" + SQL_SELECT_ALL);
                while (resultSet.next()) {
                    utilisateur = map(resultSet);
                    utilisateur.add(utilisateur);
                }
            } catch (SQLException e) {
                throw new DAOException("Erreur BD " + e.getMessage(), e);
            } finally {
                utilitaire.CloseDaoObject(resultSet, ps);
            }

            return utilisateurs;
        }


        ////////////////////////////////////////////save


        public utilisateur save(utilisateur utilisateur) throws SQLException, DAOException {
            PreparedStatement ps = null;
            ResultSet resultSet = null;
            int statut = 0;
            try {
                ps = utilitaire.initPs(connection, "INSERT INTO utilisateur (nom, prenom, email, cin, tel, sexe) VALUES (?, ?, ?, ?, ?, ?)", true, utilisateur.getNom(), utilisateur.getPrenom(), utilisateur.getEmail(), utilisateur.getCin(), utilisateur.getTel(), utilisateur.getSexe());
                statut = ps.executeUpdate();
                if (statut == 0)
                    throw new DAOException("Echec de la création de l'utilisateur, aucune ligne ajoutée dans la table.");
                ResultSet AutoGeneratedValues = ps.getGeneratedKeys();
                if (AutoGeneratedValues.next()) {
                    utilisateur.setId(AutoGeneratedValues.getLong(1));
                    System.out.println("insert into utilisateur (nom, prenom, email, cin, tel, sexe) VALUES (" + utilisateur.getNom() + ", " + utilisateur.getPrenom() + ", " + utilisateur.getEmail() + ", " + utilisateur.getCin() + ", " + utilisateur.getTel() + ", " + utilisateur.getSexe() + ")");
                    System.out.println("enregistrement de l'utilisateur avec succes");
                } else
                    throw new DAOException("Echec de la création de l'utilisateur en base, aucun ID auto-généré retourné.");

            }catch (SQLException e) {throw new DAOException("probleme dans la methode save de utilisateurDao" + e.getMessage(), e);
            }finally {
                utilitaire.CloseDaoObject(resultSet, ps);
            }
            return utilisateur;
        }

        ////////////////////////////////////////////update
        public static final String UPDATE_Column = "nom = ?, prenom = ?, username = ?, passwors = ?, role = ?";
        public static final String UPDATE = "UPDATE utilisateur SET"+ UPDATE_Column+ " WHERE id = ?";
        public utilisateur update(utilisateur utilisateur) throws DAOException, SQLException {
            PreparedStatement ps = null;
            int statut = 0;
            try{
                ps = utilitaire.initPs(connection, UPDATE, false, utilisateur.getNom(), utilisateur.getPrenom(), utilisateur.getEmail(), utilisateur.getCin(), utilisateur.getTel(), utilisateur.getSexe(), utilisateur.getId());
                statut = ps.executeUpdate();
                if (statut == 0)
                    throw new DAOException("Echec de la modification de l'utilisateur, aucune ligne ajoutée dans la table.");
                else {
                    System.out.println("[Sql] : UPDATE utilisateur SET"+
                            "prenom = "+ utilisateur.getPrenom()+", "+
                            "nom = "+ utilisateur.getNom()+", "+
                            "email = "+ utilisateur.getEmail()+", "+
                            "cin = "+ utilisateur.getCin()+", "+
                            "tel = "+ utilisateur.getTel()+", "+
                            "sexe = "+ utilisateur.getSexe()+", "+
                            "WHERE id = "+ utilisateur.getId());
                    System.out.println("modification de l'utilisateur avec succes")
                    ;

                }
            }catch (SQLException e) {
                throw new DAOException("probleme dans la methode update de utilisateurDao" + e.getMessage(), e);
            }finally {
                utilitaire.CloseDaoObject(ps);
            }

            return utilisateur;
        }





        private static utilisateur map(ResultSet resultSet) throws SQLException {
            utilisateur utilisateur = new utilisateur();
            utilisateur.setNom(resultSet.getLong("nom"));
            utilisateur.setPrenom(resultSet.getString("prenom"));
            utilisateur.setEmail(resultSet.getString("email"));
            utilisateur.setCin(resultSet.getString("cin"));
            utilisateur.setTel(resultSet.getInt("tel"));
            utilisateur.setSexe(resultSet.getString("sexe"));
            return utilisateur;
        }
        ////////////////////////////////////////////delete
        public static final String Delete = "DELETE FROM utilisateur WHERE id = ?";

        public boolean delete(utilisateur utilisateur) throws DAOException, SQLException {
            return deleteById(utilisateur.getId());
        }

        public boolean deleteById(long id) throws SQLException, DAOException {
            PreparedStatement ps = null;
            int statut = 0;
            try {
                ps = utilitaire.initPs(connection, Delete, false, utilisateur.getNom(), utilisateur.getPrenom(), utilisateur.getEmail(), utilisateur.getCin(), utilisateur.getTel(), utilisateur.getSexe());
                statut = ps.executeUpdate();
                if (statut == 0)
                    throw new DAOException("Echec de la suppression de l'utilisateur, aucune ligne supprimée de la table.");
                else{
                    System.out.println("[SQL]" + Delete);
                    System.out.println("utilisateur supprimé avec succès");

                }
            }
            catch (SQLException e) {
                throw new DAOException("Erreur BD " + e.getMessage(), e);
            } finally {
                utilitaire.CloseDaoObject(ps);
            }
            return true;
        }


    }

